// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: proto2.proto

package proto2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FooEnumP2 int32

const (
	FooEnumP2_FIRST_VALUEX  FooEnumP2 = 0
	FooEnumP2_SECOND_VALUEX FooEnumP2 = 2
)

// Enum value maps for FooEnumP2.
var (
	FooEnumP2_name = map[int32]string{
		0: "FIRST_VALUEX",
		2: "SECOND_VALUEX",
	}
	FooEnumP2_value = map[string]int32{
		"FIRST_VALUEX":  0,
		"SECOND_VALUEX": 2,
	}
)

func (x FooEnumP2) Enum() *FooEnumP2 {
	p := new(FooEnumP2)
	*p = x
	return p
}

func (x FooEnumP2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FooEnumP2) Descriptor() protoreflect.EnumDescriptor {
	return file_proto2_proto_enumTypes[0].Descriptor()
}

func (FooEnumP2) Type() protoreflect.EnumType {
	return &file_proto2_proto_enumTypes[0]
}

func (x FooEnumP2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FooEnumP2) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FooEnumP2(num)
	return nil
}

// Deprecated: Use FooEnumP2.Descriptor instead.
func (FooEnumP2) EnumDescriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{0}
}

type BazMessageP2_Nested_NestedEnum int32

const (
	BazMessageP2_Nested_Foo BazMessageP2_Nested_NestedEnum = 0
	BazMessageP2_Nested_Bar BazMessageP2_Nested_NestedEnum = 1
	BazMessageP2_Nested_Baz BazMessageP2_Nested_NestedEnum = 2
)

// Enum value maps for BazMessageP2_Nested_NestedEnum.
var (
	BazMessageP2_Nested_NestedEnum_name = map[int32]string{
		0: "Foo",
		1: "Bar",
		2: "Baz",
	}
	BazMessageP2_Nested_NestedEnum_value = map[string]int32{
		"Foo": 0,
		"Bar": 1,
		"Baz": 2,
	}
)

func (x BazMessageP2_Nested_NestedEnum) Enum() *BazMessageP2_Nested_NestedEnum {
	p := new(BazMessageP2_Nested_NestedEnum)
	*p = x
	return p
}

func (x BazMessageP2_Nested_NestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BazMessageP2_Nested_NestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_proto2_proto_enumTypes[1].Descriptor()
}

func (BazMessageP2_Nested_NestedEnum) Type() protoreflect.EnumType {
	return &file_proto2_proto_enumTypes[1]
}

func (x BazMessageP2_Nested_NestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BazMessageP2_Nested_NestedEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BazMessageP2_Nested_NestedEnum(num)
	return nil
}

// Deprecated: Use BazMessageP2_Nested_NestedEnum.Descriptor instead.
func (BazMessageP2_Nested_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{3, 0, 0}
}

type BarMessageP2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BInt32 *int32 `protobuf:"varint,1,req,name=b_int32,json=bInt32" json:"b_int32,omitempty"`
}

func (x *BarMessageP2) Reset() {
	*x = BarMessageP2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarMessageP2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarMessageP2) ProtoMessage() {}

func (x *BarMessageP2) ProtoReflect() protoreflect.Message {
	mi := &file_proto2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarMessageP2.ProtoReflect.Descriptor instead.
func (*BarMessageP2) Descriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{0}
}

func (x *BarMessageP2) GetBInt32() int32 {
	if x != nil && x.BInt32 != nil {
		return *x.BInt32
	}
	return 0
}

type FooMessageP2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FInt32    *int32     `protobuf:"varint,1,req,name=f_int32,json=fInt32" json:"f_int32,omitempty"`
	FInt64    *int64     `protobuf:"varint,2,req,name=f_int64,json=fInt64" json:"f_int64,omitempty"`
	FUint32   *uint32    `protobuf:"varint,3,opt,name=f_uint32,json=fUint32" json:"f_uint32,omitempty"`
	FUint64   *uint64    `protobuf:"varint,4,opt,name=f_uint64,json=fUint64" json:"f_uint64,omitempty"`
	FSint32   *int32     `protobuf:"zigzag32,5,opt,name=f_sint32,json=fSint32" json:"f_sint32,omitempty"`
	FSint64   *int64     `protobuf:"zigzag64,6,opt,name=f_sint64,json=fSint64" json:"f_sint64,omitempty"`
	FBool     *bool      `protobuf:"varint,7,opt,name=f_bool,json=fBool" json:"f_bool,omitempty"`
	F_FooEnum *FooEnumP2 `protobuf:"varint,8,opt,name=f_FooEnum,json=fFooEnum,enum=FooEnumP2" json:"f_FooEnum,omitempty"`
	FFixed64  *uint64    `protobuf:"fixed64,9,opt,name=f_fixed64,json=fFixed64" json:"f_fixed64,omitempty"`
	FSfixed64 *int64     `protobuf:"fixed64,10,opt,name=f_sfixed64,json=fSfixed64" json:"f_sfixed64,omitempty"`
	FFixed32  *uint32    `protobuf:"fixed32,11,opt,name=f_fixed32,json=fFixed32" json:"f_fixed32,omitempty"`
	FSfixed32 *int32     `protobuf:"fixed32,12,opt,name=f_sfixed32,json=fSfixed32" json:"f_sfixed32,omitempty"`
	FDouble   *float64   `protobuf:"fixed64,13,opt,name=f_double,json=fDouble" json:"f_double,omitempty"`
	FFloat    *float32   `protobuf:"fixed32,14,opt,name=f_float,json=fFloat" json:"f_float,omitempty"`
	FBytes    []byte     `protobuf:"bytes,15,opt,name=f_bytes,json=fBytes" json:"f_bytes,omitempty"`
	FString   *string    `protobuf:"bytes,16,opt,name=f_string,json=fString" json:"f_string,omitempty"`
	// optional FooMessage f_self_message = 17;
	FBarMessage          *BarMessageP2 `protobuf:"bytes,18,opt,name=f_bar_message,json=fBarMessage" json:"f_bar_message,omitempty"`
	FRepeatedInt32       []int32       `protobuf:"varint,19,rep,name=f_repeated_int32,json=fRepeatedInt32" json:"f_repeated_int32,omitempty"`
	FRepeatedPackedInt32 []int32       `protobuf:"varint,20,rep,packed,name=f_repeated_packed_int32,json=fRepeatedPackedInt32" json:"f_repeated_packed_int32,omitempty"`
	FRepeatedPackedFloat []float32     `protobuf:"fixed32,21,rep,packed,name=f_repeated_packed_float,json=fRepeatedPackedFloat" json:"f_repeated_packed_float,omitempty"`
	// optional a.b.ImportedMessage f_imported = 22;
	FBaz                *BazMessageP2                   `protobuf:"bytes,23,opt,name=f_baz,json=fBaz" json:"f_baz,omitempty"`
	FNested             *BazMessageP2_Nested            `protobuf:"bytes,24,opt,name=f_nested,json=fNested" json:"f_nested,omitempty"`
	FNestedEnum         *BazMessageP2_Nested_NestedEnum `protobuf:"varint,25,opt,name=f_nested_enum,json=fNestedEnum,enum=BazMessageP2_Nested_NestedEnum,def=0" json:"f_nested_enum,omitempty"`
	FMap                []*MapEntryP2                   `protobuf:"bytes,27,rep,name=f_map,json=fMap" json:"f_map,omitempty"`
	F1                  *int32                          `protobuf:"varint,28,opt,name=f1" json:"f1,omitempty"`
	F2                  *bool                           `protobuf:"varint,29,opt,name=f2" json:"f2,omitempty"`
	F3                  *string                         `protobuf:"bytes,30,opt,name=f3" json:"f3,omitempty"`
	FRepeatedString     []string                        `protobuf:"bytes,31,rep,name=f_repeated_string,json=fRepeatedString" json:"f_repeated_string,omitempty"`
	FRepeatedBazMessage []*BazMessageP2                 `protobuf:"bytes,32,rep,name=f_repeated_baz_message,json=fRepeatedBazMessage" json:"f_repeated_baz_message,omitempty"`
	FOptionalString     *string                         `protobuf:"bytes,33,opt,name=f_optional_string,json=fOptionalString" json:"f_optional_string,omitempty"`
	// default value for fields
	FDefaultInt32  *int32     `protobuf:"varint,34,opt,name=f_default_int32,json=fDefaultInt32,def=42" json:"f_default_int32,omitempty"`
	FDefaultString *string    `protobuf:"bytes,35,opt,name=f_default_string,json=fDefaultString,def=default_value" json:"f_default_string,omitempty"`
	FDefaultBool   *bool      `protobuf:"varint,36,opt,name=f_default_bool,json=fDefaultBool,def=1" json:"f_default_bool,omitempty"`
	FDefaultDouble *float64   `protobuf:"fixed64,37,opt,name=f_default_double,json=fDefaultDouble,def=3.14" json:"f_default_double,omitempty"`
	FDefaultEnum   *FooEnumP2 `protobuf:"varint,38,opt,name=f_default_enum,json=fDefaultEnum,enum=FooEnumP2,def=2" json:"f_default_enum,omitempty"`
}

// Default values for FooMessageP2 fields.
const (
	Default_FooMessageP2_FNestedEnum    = BazMessageP2_Nested_Foo
	Default_FooMessageP2_FDefaultInt32  = int32(42)
	Default_FooMessageP2_FDefaultString = string("default_value")
	Default_FooMessageP2_FDefaultBool   = bool(true)
	Default_FooMessageP2_FDefaultDouble = float64(3.14)
	Default_FooMessageP2_FDefaultEnum   = FooEnumP2_SECOND_VALUEX
)

func (x *FooMessageP2) Reset() {
	*x = FooMessageP2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooMessageP2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooMessageP2) ProtoMessage() {}

func (x *FooMessageP2) ProtoReflect() protoreflect.Message {
	mi := &file_proto2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooMessageP2.ProtoReflect.Descriptor instead.
func (*FooMessageP2) Descriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{1}
}

func (x *FooMessageP2) GetFInt32() int32 {
	if x != nil && x.FInt32 != nil {
		return *x.FInt32
	}
	return 0
}

func (x *FooMessageP2) GetFInt64() int64 {
	if x != nil && x.FInt64 != nil {
		return *x.FInt64
	}
	return 0
}

func (x *FooMessageP2) GetFUint32() uint32 {
	if x != nil && x.FUint32 != nil {
		return *x.FUint32
	}
	return 0
}

func (x *FooMessageP2) GetFUint64() uint64 {
	if x != nil && x.FUint64 != nil {
		return *x.FUint64
	}
	return 0
}

func (x *FooMessageP2) GetFSint32() int32 {
	if x != nil && x.FSint32 != nil {
		return *x.FSint32
	}
	return 0
}

func (x *FooMessageP2) GetFSint64() int64 {
	if x != nil && x.FSint64 != nil {
		return *x.FSint64
	}
	return 0
}

func (x *FooMessageP2) GetFBool() bool {
	if x != nil && x.FBool != nil {
		return *x.FBool
	}
	return false
}

func (x *FooMessageP2) GetF_FooEnum() FooEnumP2 {
	if x != nil && x.F_FooEnum != nil {
		return *x.F_FooEnum
	}
	return FooEnumP2_FIRST_VALUEX
}

func (x *FooMessageP2) GetFFixed64() uint64 {
	if x != nil && x.FFixed64 != nil {
		return *x.FFixed64
	}
	return 0
}

func (x *FooMessageP2) GetFSfixed64() int64 {
	if x != nil && x.FSfixed64 != nil {
		return *x.FSfixed64
	}
	return 0
}

func (x *FooMessageP2) GetFFixed32() uint32 {
	if x != nil && x.FFixed32 != nil {
		return *x.FFixed32
	}
	return 0
}

func (x *FooMessageP2) GetFSfixed32() int32 {
	if x != nil && x.FSfixed32 != nil {
		return *x.FSfixed32
	}
	return 0
}

func (x *FooMessageP2) GetFDouble() float64 {
	if x != nil && x.FDouble != nil {
		return *x.FDouble
	}
	return 0
}

func (x *FooMessageP2) GetFFloat() float32 {
	if x != nil && x.FFloat != nil {
		return *x.FFloat
	}
	return 0
}

func (x *FooMessageP2) GetFBytes() []byte {
	if x != nil {
		return x.FBytes
	}
	return nil
}

func (x *FooMessageP2) GetFString() string {
	if x != nil && x.FString != nil {
		return *x.FString
	}
	return ""
}

func (x *FooMessageP2) GetFBarMessage() *BarMessageP2 {
	if x != nil {
		return x.FBarMessage
	}
	return nil
}

func (x *FooMessageP2) GetFRepeatedInt32() []int32 {
	if x != nil {
		return x.FRepeatedInt32
	}
	return nil
}

func (x *FooMessageP2) GetFRepeatedPackedInt32() []int32 {
	if x != nil {
		return x.FRepeatedPackedInt32
	}
	return nil
}

func (x *FooMessageP2) GetFRepeatedPackedFloat() []float32 {
	if x != nil {
		return x.FRepeatedPackedFloat
	}
	return nil
}

func (x *FooMessageP2) GetFBaz() *BazMessageP2 {
	if x != nil {
		return x.FBaz
	}
	return nil
}

func (x *FooMessageP2) GetFNested() *BazMessageP2_Nested {
	if x != nil {
		return x.FNested
	}
	return nil
}

func (x *FooMessageP2) GetFNestedEnum() BazMessageP2_Nested_NestedEnum {
	if x != nil && x.FNestedEnum != nil {
		return *x.FNestedEnum
	}
	return Default_FooMessageP2_FNestedEnum
}

func (x *FooMessageP2) GetFMap() []*MapEntryP2 {
	if x != nil {
		return x.FMap
	}
	return nil
}

func (x *FooMessageP2) GetF1() int32 {
	if x != nil && x.F1 != nil {
		return *x.F1
	}
	return 0
}

func (x *FooMessageP2) GetF2() bool {
	if x != nil && x.F2 != nil {
		return *x.F2
	}
	return false
}

func (x *FooMessageP2) GetF3() string {
	if x != nil && x.F3 != nil {
		return *x.F3
	}
	return ""
}

func (x *FooMessageP2) GetFRepeatedString() []string {
	if x != nil {
		return x.FRepeatedString
	}
	return nil
}

func (x *FooMessageP2) GetFRepeatedBazMessage() []*BazMessageP2 {
	if x != nil {
		return x.FRepeatedBazMessage
	}
	return nil
}

func (x *FooMessageP2) GetFOptionalString() string {
	if x != nil && x.FOptionalString != nil {
		return *x.FOptionalString
	}
	return ""
}

func (x *FooMessageP2) GetFDefaultInt32() int32 {
	if x != nil && x.FDefaultInt32 != nil {
		return *x.FDefaultInt32
	}
	return Default_FooMessageP2_FDefaultInt32
}

func (x *FooMessageP2) GetFDefaultString() string {
	if x != nil && x.FDefaultString != nil {
		return *x.FDefaultString
	}
	return Default_FooMessageP2_FDefaultString
}

func (x *FooMessageP2) GetFDefaultBool() bool {
	if x != nil && x.FDefaultBool != nil {
		return *x.FDefaultBool
	}
	return Default_FooMessageP2_FDefaultBool
}

func (x *FooMessageP2) GetFDefaultDouble() float64 {
	if x != nil && x.FDefaultDouble != nil {
		return *x.FDefaultDouble
	}
	return Default_FooMessageP2_FDefaultDouble
}

func (x *FooMessageP2) GetFDefaultEnum() FooEnumP2 {
	if x != nil && x.FDefaultEnum != nil {
		return *x.FDefaultEnum
	}
	return Default_FooMessageP2_FDefaultEnum
}

// Map entry message for proto2 compatibility
type MapEntryP2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value *int32  `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
}

func (x *MapEntryP2) Reset() {
	*x = MapEntryP2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapEntryP2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapEntryP2) ProtoMessage() {}

func (x *MapEntryP2) ProtoReflect() protoreflect.Message {
	mi := &file_proto2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapEntryP2.ProtoReflect.Descriptor instead.
func (*MapEntryP2) Descriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{2}
}

func (x *MapEntryP2) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *MapEntryP2) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type BazMessageP2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested  *BazMessageP2_Nested `protobuf:"bytes,1,opt,name=nested" json:"nested,omitempty"`
	BInt64  *int64               `protobuf:"varint,2,opt,name=b_int64,json=bInt64" json:"b_int64,omitempty"`
	BString *string              `protobuf:"bytes,3,opt,name=b_string,json=bString" json:"b_string,omitempty"`
}

func (x *BazMessageP2) Reset() {
	*x = BazMessageP2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazMessageP2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazMessageP2) ProtoMessage() {}

func (x *BazMessageP2) ProtoReflect() protoreflect.Message {
	mi := &file_proto2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazMessageP2.ProtoReflect.Descriptor instead.
func (*BazMessageP2) Descriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{3}
}

func (x *BazMessageP2) GetNested() *BazMessageP2_Nested {
	if x != nil {
		return x.Nested
	}
	return nil
}

func (x *BazMessageP2) GetBInt64() int64 {
	if x != nil && x.BInt64 != nil {
		return *x.BInt64
	}
	return 0
}

func (x *BazMessageP2) GetBString() string {
	if x != nil && x.BString != nil {
		return *x.BString
	}
	return ""
}

type RepeatedMessageP2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarMessage []*BarMessageP2 `protobuf:"bytes,1,rep,name=bar_message,json=barMessage" json:"bar_message,omitempty"`
}

func (x *RepeatedMessageP2) Reset() {
	*x = RepeatedMessageP2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedMessageP2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedMessageP2) ProtoMessage() {}

func (x *RepeatedMessageP2) ProtoReflect() protoreflect.Message {
	mi := &file_proto2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedMessageP2.ProtoReflect.Descriptor instead.
func (*RepeatedMessageP2) Descriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{4}
}

func (x *RepeatedMessageP2) GetBarMessage() []*BarMessageP2 {
	if x != nil {
		return x.BarMessage
	}
	return nil
}

type BazMessageP2_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FNested *BazMessageP2_Nested_NestedMessage `protobuf:"bytes,1,opt,name=f_nested,json=fNested" json:"f_nested,omitempty"`
}

func (x *BazMessageP2_Nested) Reset() {
	*x = BazMessageP2_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazMessageP2_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazMessageP2_Nested) ProtoMessage() {}

func (x *BazMessageP2_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_proto2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazMessageP2_Nested.ProtoReflect.Descriptor instead.
func (*BazMessageP2_Nested) Descriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{3, 0}
}

func (x *BazMessageP2_Nested) GetFNested() *BazMessageP2_Nested_NestedMessage {
	if x != nil {
		return x.FNested
	}
	return nil
}

type BazMessageP2_Nested_NestedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FNested *int32 `protobuf:"varint,1,req,name=f_nested,json=fNested" json:"f_nested,omitempty"`
}

func (x *BazMessageP2_Nested_NestedMessage) Reset() {
	*x = BazMessageP2_Nested_NestedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazMessageP2_Nested_NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazMessageP2_Nested_NestedMessage) ProtoMessage() {}

func (x *BazMessageP2_Nested_NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazMessageP2_Nested_NestedMessage.ProtoReflect.Descriptor instead.
func (*BazMessageP2_Nested_NestedMessage) Descriptor() ([]byte, []int) {
	return file_proto2_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *BazMessageP2_Nested_NestedMessage) GetFNested() int32 {
	if x != nil && x.FNested != nil {
		return *x.FNested
	}
	return 0
}

var File_proto2_proto protoreflect.FileDescriptor

var file_proto2_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27,
	0x0a, 0x0c, 0x42, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x12, 0x17,
	0x0a, 0x07, 0x62, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x62, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x22, 0xae, 0x0a, 0x0a, 0x0c, 0x46, 0x6f, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x55,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x07, 0x66, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x66,
	0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x5f, 0x62, 0x6f, 0x6f, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x27, 0x0a,
	0x09, 0x66, 0x5f, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x32, 0x52, 0x08, 0x66, 0x46,
	0x6f, 0x6f, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x10, 0x52, 0x09, 0x66, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0f, 0x52, 0x09, 0x66, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x66, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x0d, 0x66, 0x5f, 0x62, 0x61, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x42, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x52, 0x0b, 0x66, 0x42,
	0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x5f, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x39, 0x0a, 0x17, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x14,
	0x20, 0x03, 0x28, 0x05, 0x42, 0x02, 0x10, 0x01, 0x52, 0x14, 0x66, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x39,
	0x0a, 0x17, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x02, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x14, 0x66, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x5f, 0x62,
	0x61, 0x7a, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x52, 0x04, 0x66, 0x42, 0x61, 0x7a, 0x12, 0x2f, 0x0a,
	0x08, 0x66, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x2e, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x07, 0x66, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x48,
	0x0a, 0x0d, 0x66, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x32, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x03, 0x46, 0x6f, 0x6f, 0x52, 0x0b, 0x66, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x50, 0x32, 0x52, 0x04, 0x66, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x31,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x66, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x32,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x66, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x33,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x33, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x5f,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x1f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x16, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x7a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x20, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x32, 0x52, 0x13, 0x66, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x0f, 0x66, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x02, 0x34, 0x32, 0x52, 0x0d, 0x66, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x37, 0x0a, 0x10, 0x66, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x66, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x0e, 0x66,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0c, 0x66, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x10, 0x66, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x01, 0x3a, 0x04, 0x33, 0x2e, 0x31, 0x34, 0x52, 0x0e, 0x66, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x66, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x32, 0x3a, 0x0d, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x58, 0x52, 0x0c, 0x66, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x34, 0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f,
	0x02, 0x0a, 0x0c, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x12,
	0x2c, 0x0a, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x2e, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x62, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x62, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x1a, 0x9c, 0x01, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x08,
	0x66, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x2e, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x66, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x1a, 0x2a, 0x0a, 0x0d, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x66, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0x27, 0x0a, 0x0a, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x6f, 0x6f, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x42, 0x61, 0x72, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x61, 0x7a, 0x10, 0x02,
	0x22, 0x43, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x32, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x61, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x32, 0x52, 0x0a, 0x62, 0x61, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x30, 0x0a, 0x09, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x75, 0x6d,
	0x50, 0x32, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x55,
	0x45, 0x58, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x58, 0x10, 0x02, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6f, 0x6e, 0x62, 0x69, 0x74, 0x2d, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2d, 0x67, 0x6f,
	0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32,
}

var (
	file_proto2_proto_rawDescOnce sync.Once
	file_proto2_proto_rawDescData = file_proto2_proto_rawDesc
)

func file_proto2_proto_rawDescGZIP() []byte {
	file_proto2_proto_rawDescOnce.Do(func() {
		file_proto2_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto2_proto_rawDescData)
	})
	return file_proto2_proto_rawDescData
}

var file_proto2_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto2_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto2_proto_goTypes = []any{
	(FooEnumP2)(0),                            // 0: FooEnumP2
	(BazMessageP2_Nested_NestedEnum)(0),       // 1: BazMessageP2.Nested.NestedEnum
	(*BarMessageP2)(nil),                      // 2: BarMessageP2
	(*FooMessageP2)(nil),                      // 3: FooMessageP2
	(*MapEntryP2)(nil),                        // 4: MapEntryP2
	(*BazMessageP2)(nil),                      // 5: BazMessageP2
	(*RepeatedMessageP2)(nil),                 // 6: RepeatedMessageP2
	(*BazMessageP2_Nested)(nil),               // 7: BazMessageP2.Nested
	(*BazMessageP2_Nested_NestedMessage)(nil), // 8: BazMessageP2.Nested.NestedMessage
}
var file_proto2_proto_depIdxs = []int32{
	0,  // 0: FooMessageP2.f_FooEnum:type_name -> FooEnumP2
	2,  // 1: FooMessageP2.f_bar_message:type_name -> BarMessageP2
	5,  // 2: FooMessageP2.f_baz:type_name -> BazMessageP2
	7,  // 3: FooMessageP2.f_nested:type_name -> BazMessageP2.Nested
	1,  // 4: FooMessageP2.f_nested_enum:type_name -> BazMessageP2.Nested.NestedEnum
	4,  // 5: FooMessageP2.f_map:type_name -> MapEntryP2
	5,  // 6: FooMessageP2.f_repeated_baz_message:type_name -> BazMessageP2
	0,  // 7: FooMessageP2.f_default_enum:type_name -> FooEnumP2
	7,  // 8: BazMessageP2.nested:type_name -> BazMessageP2.Nested
	2,  // 9: RepeatedMessageP2.bar_message:type_name -> BarMessageP2
	8,  // 10: BazMessageP2.Nested.f_nested:type_name -> BazMessageP2.Nested.NestedMessage
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto2_proto_init() }
func file_proto2_proto_init() {
	if File_proto2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto2_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BarMessageP2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto2_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FooMessageP2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto2_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MapEntryP2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto2_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BazMessageP2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto2_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedMessageP2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto2_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BazMessageP2_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto2_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BazMessageP2_Nested_NestedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto2_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto2_proto_goTypes,
		DependencyIndexes: file_proto2_proto_depIdxs,
		EnumInfos:         file_proto2_proto_enumTypes,
		MessageInfos:      file_proto2_proto_msgTypes,
	}.Build()
	File_proto2_proto = out.File
	file_proto2_proto_rawDesc = nil
	file_proto2_proto_goTypes = nil
	file_proto2_proto_depIdxs = nil
}
