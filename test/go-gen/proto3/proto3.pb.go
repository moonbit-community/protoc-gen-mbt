// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: test/reader/proto3.proto

package __proto3

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FooEnum int32

const (
	FooEnum_FIRST_VALUE  FooEnum = 0
	FooEnum_SECOND_VALUE FooEnum = 2
)

// Enum value maps for FooEnum.
var (
	FooEnum_name = map[int32]string{
		0: "FIRST_VALUE",
		2: "SECOND_VALUE",
	}
	FooEnum_value = map[string]int32{
		"FIRST_VALUE":  0,
		"SECOND_VALUE": 2,
	}
)

func (x FooEnum) Enum() *FooEnum {
	p := new(FooEnum)
	*p = x
	return p
}

func (x FooEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FooEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_reader_proto3_proto_enumTypes[0].Descriptor()
}

func (FooEnum) Type() protoreflect.EnumType {
	return &file_test_reader_proto3_proto_enumTypes[0]
}

func (x FooEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FooEnum.Descriptor instead.
func (FooEnum) EnumDescriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{0}
}

type BazMessage_Nested_NestedEnum int32

const (
	BazMessage_Nested_Foo BazMessage_Nested_NestedEnum = 0
	BazMessage_Nested_Bar BazMessage_Nested_NestedEnum = 1
	BazMessage_Nested_Baz BazMessage_Nested_NestedEnum = 2
)

// Enum value maps for BazMessage_Nested_NestedEnum.
var (
	BazMessage_Nested_NestedEnum_name = map[int32]string{
		0: "Foo",
		1: "Bar",
		2: "Baz",
	}
	BazMessage_Nested_NestedEnum_value = map[string]int32{
		"Foo": 0,
		"Bar": 1,
		"Baz": 2,
	}
)

func (x BazMessage_Nested_NestedEnum) Enum() *BazMessage_Nested_NestedEnum {
	p := new(BazMessage_Nested_NestedEnum)
	*p = x
	return p
}

func (x BazMessage_Nested_NestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BazMessage_Nested_NestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_reader_proto3_proto_enumTypes[1].Descriptor()
}

func (BazMessage_Nested_NestedEnum) Type() protoreflect.EnumType {
	return &file_test_reader_proto3_proto_enumTypes[1]
}

func (x BazMessage_Nested_NestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BazMessage_Nested_NestedEnum.Descriptor instead.
func (BazMessage_Nested_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{2, 0, 0}
}

type BarMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BInt32 int32 `protobuf:"varint,1,opt,name=b_int32,json=bInt32,proto3" json:"b_int32,omitempty"`
}

func (x *BarMessage) Reset() {
	*x = BarMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarMessage) ProtoMessage() {}

func (x *BarMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarMessage.ProtoReflect.Descriptor instead.
func (*BarMessage) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{0}
}

func (x *BarMessage) GetBInt32() int32 {
	if x != nil {
		return x.BInt32
	}
	return 0
}

type FooMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FInt32    int32   `protobuf:"varint,1,opt,name=f_int32,json=fInt32,proto3" json:"f_int32,omitempty"`
	FInt64    int64   `protobuf:"varint,2,opt,name=f_int64,json=fInt64,proto3" json:"f_int64,omitempty"`
	FUint32   uint32  `protobuf:"varint,3,opt,name=f_uint32,json=fUint32,proto3" json:"f_uint32,omitempty"`
	FUint64   uint64  `protobuf:"varint,4,opt,name=f_uint64,json=fUint64,proto3" json:"f_uint64,omitempty"`
	FSint32   int32   `protobuf:"zigzag32,5,opt,name=f_sint32,json=fSint32,proto3" json:"f_sint32,omitempty"`
	FSint64   int64   `protobuf:"zigzag64,6,opt,name=f_sint64,json=fSint64,proto3" json:"f_sint64,omitempty"`
	FBool     bool    `protobuf:"varint,7,opt,name=f_bool,json=fBool,proto3" json:"f_bool,omitempty"`
	F_FooEnum FooEnum `protobuf:"varint,8,opt,name=f_FooEnum,json=fFooEnum,proto3,enum=FooEnum" json:"f_FooEnum,omitempty"`
	FFixed64  uint64  `protobuf:"fixed64,9,opt,name=f_fixed64,json=fFixed64,proto3" json:"f_fixed64,omitempty"`
	FSfixed64 int64   `protobuf:"fixed64,10,opt,name=f_sfixed64,json=fSfixed64,proto3" json:"f_sfixed64,omitempty"`
	FFixed32  uint32  `protobuf:"fixed32,11,opt,name=f_fixed32,json=fFixed32,proto3" json:"f_fixed32,omitempty"`
	FSfixed32 int32   `protobuf:"fixed32,12,opt,name=f_sfixed32,json=fSfixed32,proto3" json:"f_sfixed32,omitempty"`
	FDouble   float64 `protobuf:"fixed64,13,opt,name=f_double,json=fDouble,proto3" json:"f_double,omitempty"`
	FFloat    float32 `protobuf:"fixed32,14,opt,name=f_float,json=fFloat,proto3" json:"f_float,omitempty"`
	FBytes    []byte  `protobuf:"bytes,15,opt,name=f_bytes,json=fBytes,proto3" json:"f_bytes,omitempty"`
	FString   string  `protobuf:"bytes,16,opt,name=f_string,json=fString,proto3" json:"f_string,omitempty"`
	// FooMessage f_self_message = 17;
	FBarMessage          *BarMessage `protobuf:"bytes,18,opt,name=f_bar_message,json=fBarMessage,proto3" json:"f_bar_message,omitempty"`
	FRepeatedInt32       []int32     `protobuf:"varint,19,rep,packed,name=f_repeated_int32,json=fRepeatedInt32,proto3" json:"f_repeated_int32,omitempty"`
	FRepeatedPackedInt32 []int32     `protobuf:"varint,20,rep,packed,name=f_repeated_packed_int32,json=fRepeatedPackedInt32,proto3" json:"f_repeated_packed_int32,omitempty"`
	FRepeatedPackedFloat []float32   `protobuf:"fixed32,21,rep,packed,name=f_repeated_packed_float,json=fRepeatedPackedFloat,proto3" json:"f_repeated_packed_float,omitempty"`
	// a.b.ImportedMessage f_imported = 22;
	FBaz        *BazMessage                  `protobuf:"bytes,23,opt,name=f_baz,json=fBaz,proto3" json:"f_baz,omitempty"`
	FNested     *BazMessage_Nested           `protobuf:"bytes,24,opt,name=f_nested,json=fNested,proto3" json:"f_nested,omitempty"`
	FNestedEnum BazMessage_Nested_NestedEnum `protobuf:"varint,25,opt,name=f_nested_enum,json=fNestedEnum,proto3,enum=BazMessage_Nested_NestedEnum" json:"f_nested_enum,omitempty"`
	FMap        map[string]int32             `protobuf:"bytes,26,rep,name=f_map,json=fMap,proto3" json:"f_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Types that are assignable to TestOneof:
	//
	//	*FooMessage_F1
	//	*FooMessage_F2
	//	*FooMessage_F3
	TestOneof           isFooMessage_TestOneof `protobuf_oneof:"test_oneof"`
	FRepeatedString     []string               `protobuf:"bytes,30,rep,name=f_repeated_string,json=fRepeatedString,proto3" json:"f_repeated_string,omitempty"`
	FRepeatedBazMessage []*BazMessage          `protobuf:"bytes,31,rep,name=f_repeated_baz_message,json=fRepeatedBazMessage,proto3" json:"f_repeated_baz_message,omitempty"`
	FOptionalString     *string                `protobuf:"bytes,32,opt,name=f_optional_string,json=fOptionalString,proto3,oneof" json:"f_optional_string,omitempty"`
}

func (x *FooMessage) Reset() {
	*x = FooMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooMessage) ProtoMessage() {}

func (x *FooMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooMessage.ProtoReflect.Descriptor instead.
func (*FooMessage) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{1}
}

func (x *FooMessage) GetFInt32() int32 {
	if x != nil {
		return x.FInt32
	}
	return 0
}

func (x *FooMessage) GetFInt64() int64 {
	if x != nil {
		return x.FInt64
	}
	return 0
}

func (x *FooMessage) GetFUint32() uint32 {
	if x != nil {
		return x.FUint32
	}
	return 0
}

func (x *FooMessage) GetFUint64() uint64 {
	if x != nil {
		return x.FUint64
	}
	return 0
}

func (x *FooMessage) GetFSint32() int32 {
	if x != nil {
		return x.FSint32
	}
	return 0
}

func (x *FooMessage) GetFSint64() int64 {
	if x != nil {
		return x.FSint64
	}
	return 0
}

func (x *FooMessage) GetFBool() bool {
	if x != nil {
		return x.FBool
	}
	return false
}

func (x *FooMessage) GetF_FooEnum() FooEnum {
	if x != nil {
		return x.F_FooEnum
	}
	return FooEnum_FIRST_VALUE
}

func (x *FooMessage) GetFFixed64() uint64 {
	if x != nil {
		return x.FFixed64
	}
	return 0
}

func (x *FooMessage) GetFSfixed64() int64 {
	if x != nil {
		return x.FSfixed64
	}
	return 0
}

func (x *FooMessage) GetFFixed32() uint32 {
	if x != nil {
		return x.FFixed32
	}
	return 0
}

func (x *FooMessage) GetFSfixed32() int32 {
	if x != nil {
		return x.FSfixed32
	}
	return 0
}

func (x *FooMessage) GetFDouble() float64 {
	if x != nil {
		return x.FDouble
	}
	return 0
}

func (x *FooMessage) GetFFloat() float32 {
	if x != nil {
		return x.FFloat
	}
	return 0
}

func (x *FooMessage) GetFBytes() []byte {
	if x != nil {
		return x.FBytes
	}
	return nil
}

func (x *FooMessage) GetFString() string {
	if x != nil {
		return x.FString
	}
	return ""
}

func (x *FooMessage) GetFBarMessage() *BarMessage {
	if x != nil {
		return x.FBarMessage
	}
	return nil
}

func (x *FooMessage) GetFRepeatedInt32() []int32 {
	if x != nil {
		return x.FRepeatedInt32
	}
	return nil
}

func (x *FooMessage) GetFRepeatedPackedInt32() []int32 {
	if x != nil {
		return x.FRepeatedPackedInt32
	}
	return nil
}

func (x *FooMessage) GetFRepeatedPackedFloat() []float32 {
	if x != nil {
		return x.FRepeatedPackedFloat
	}
	return nil
}

func (x *FooMessage) GetFBaz() *BazMessage {
	if x != nil {
		return x.FBaz
	}
	return nil
}

func (x *FooMessage) GetFNested() *BazMessage_Nested {
	if x != nil {
		return x.FNested
	}
	return nil
}

func (x *FooMessage) GetFNestedEnum() BazMessage_Nested_NestedEnum {
	if x != nil {
		return x.FNestedEnum
	}
	return BazMessage_Nested_Foo
}

func (x *FooMessage) GetFMap() map[string]int32 {
	if x != nil {
		return x.FMap
	}
	return nil
}

func (m *FooMessage) GetTestOneof() isFooMessage_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (x *FooMessage) GetF1() int32 {
	if x, ok := x.GetTestOneof().(*FooMessage_F1); ok {
		return x.F1
	}
	return 0
}

func (x *FooMessage) GetF2() bool {
	if x, ok := x.GetTestOneof().(*FooMessage_F2); ok {
		return x.F2
	}
	return false
}

func (x *FooMessage) GetF3() string {
	if x, ok := x.GetTestOneof().(*FooMessage_F3); ok {
		return x.F3
	}
	return ""
}

func (x *FooMessage) GetFRepeatedString() []string {
	if x != nil {
		return x.FRepeatedString
	}
	return nil
}

func (x *FooMessage) GetFRepeatedBazMessage() []*BazMessage {
	if x != nil {
		return x.FRepeatedBazMessage
	}
	return nil
}

func (x *FooMessage) GetFOptionalString() string {
	if x != nil && x.FOptionalString != nil {
		return *x.FOptionalString
	}
	return ""
}

type isFooMessage_TestOneof interface {
	isFooMessage_TestOneof()
}

type FooMessage_F1 struct {
	F1 int32 `protobuf:"varint,27,opt,name=f1,proto3,oneof"`
}

type FooMessage_F2 struct {
	F2 bool `protobuf:"varint,28,opt,name=f2,proto3,oneof"`
}

type FooMessage_F3 struct {
	F3 string `protobuf:"bytes,29,opt,name=f3,proto3,oneof"`
}

func (*FooMessage_F1) isFooMessage_TestOneof() {}

func (*FooMessage_F2) isFooMessage_TestOneof() {}

func (*FooMessage_F3) isFooMessage_TestOneof() {}

type BazMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested  *BazMessage_Nested `protobuf:"bytes,1,opt,name=nested,proto3" json:"nested,omitempty"`
	BInt64  int64              `protobuf:"varint,2,opt,name=b_int64,json=bInt64,proto3" json:"b_int64,omitempty"`
	BString string             `protobuf:"bytes,3,opt,name=b_string,json=bString,proto3" json:"b_string,omitempty"`
}

func (x *BazMessage) Reset() {
	*x = BazMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazMessage) ProtoMessage() {}

func (x *BazMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazMessage.ProtoReflect.Descriptor instead.
func (*BazMessage) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{2}
}

func (x *BazMessage) GetNested() *BazMessage_Nested {
	if x != nil {
		return x.Nested
	}
	return nil
}

func (x *BazMessage) GetBInt64() int64 {
	if x != nil {
		return x.BInt64
	}
	return 0
}

func (x *BazMessage) GetBString() string {
	if x != nil {
		return x.BString
	}
	return ""
}

type RepeatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarMessage []*BarMessage `protobuf:"bytes,1,rep,name=bar_message,json=barMessage,proto3" json:"bar_message,omitempty"`
}

func (x *RepeatedMessage) Reset() {
	*x = RepeatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedMessage) ProtoMessage() {}

func (x *RepeatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedMessage.ProtoReflect.Descriptor instead.
func (*RepeatedMessage) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{3}
}

func (x *RepeatedMessage) GetBarMessage() []*BarMessage {
	if x != nil {
		return x.BarMessage
	}
	return nil
}

type EmptyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field int32 `protobuf:"varint,1,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *EmptyMessage) Reset() {
	*x = EmptyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessage) ProtoMessage() {}

func (x *EmptyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessage.ProtoReflect.Descriptor instead.
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{4}
}

func (x *EmptyMessage) GetField() int32 {
	if x != nil {
		return x.Field
	}
	return 0
}

type EmptyMessageWithField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmptyMessage *EmptyMessage `protobuf:"bytes,1,opt,name=empty_message,json=emptyMessage,proto3" json:"empty_message,omitempty"`
}

func (x *EmptyMessageWithField) Reset() {
	*x = EmptyMessageWithField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyMessageWithField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessageWithField) ProtoMessage() {}

func (x *EmptyMessageWithField) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessageWithField.ProtoReflect.Descriptor instead.
func (*EmptyMessageWithField) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{5}
}

func (x *EmptyMessageWithField) GetEmptyMessage() *EmptyMessage {
	if x != nil {
		return x.EmptyMessage
	}
	return nil
}

type BazMessage_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FNested *BazMessage_Nested_NestedMessage `protobuf:"bytes,1,opt,name=f_nested,json=fNested,proto3" json:"f_nested,omitempty"`
}

func (x *BazMessage_Nested) Reset() {
	*x = BazMessage_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazMessage_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazMessage_Nested) ProtoMessage() {}

func (x *BazMessage_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazMessage_Nested.ProtoReflect.Descriptor instead.
func (*BazMessage_Nested) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{2, 0}
}

func (x *BazMessage_Nested) GetFNested() *BazMessage_Nested_NestedMessage {
	if x != nil {
		return x.FNested
	}
	return nil
}

type BazMessage_Nested_NestedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FNested int32 `protobuf:"varint,1,opt,name=f_nested,json=fNested,proto3" json:"f_nested,omitempty"`
}

func (x *BazMessage_Nested_NestedMessage) Reset() {
	*x = BazMessage_Nested_NestedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_reader_proto3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazMessage_Nested_NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazMessage_Nested_NestedMessage) ProtoMessage() {}

func (x *BazMessage_Nested_NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_reader_proto3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazMessage_Nested_NestedMessage.ProtoReflect.Descriptor instead.
func (*BazMessage_Nested_NestedMessage) Descriptor() ([]byte, []int) {
	return file_test_reader_proto3_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *BazMessage_Nested_NestedMessage) GetFNested() int32 {
	if x != nil {
		return x.FNested
	}
	return 0
}

var File_test_reader_proto3_proto protoreflect.FileDescriptor

var file_test_reader_proto3_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0a, 0x42, 0x61,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x5f, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x22, 0x8b, 0x09, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x66, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x73, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x66, 0x53, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x66, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x15,
	0x0a, 0x06, 0x66, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x09, 0x66, 0x5f, 0x46, 0x6f, 0x6f, 0x45, 0x6e,
	0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x46, 0x6f, 0x6f, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x08, 0x66, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x5f, 0x73,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x10, 0x52, 0x09, 0x66,
	0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x66, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x09, 0x66, 0x53, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x66, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x0d,
	0x66, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x66, 0x42, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x18, 0x13, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x39, 0x0a, 0x17, 0x66, 0x5f, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x14, 0x20, 0x03, 0x28, 0x05, 0x42, 0x02, 0x10, 0x01, 0x52, 0x14, 0x66, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x39, 0x0a, 0x17, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x14, 0x66, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x20, 0x0a,
	0x05, 0x66, 0x5f, 0x62, 0x61, 0x7a, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42,
	0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x66, 0x42, 0x61, 0x7a, 0x12,
	0x2d, 0x0a, 0x08, 0x66, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x07, 0x66, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x41,
	0x0a, 0x0d, 0x66, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x66, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x46, 0x6f, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x66, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a,
	0x02, 0x66, 0x31, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x66, 0x31, 0x12,
	0x10, 0x0a, 0x02, 0x66, 0x32, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x02, 0x66,
	0x32, 0x12, 0x10, 0x0a, 0x02, 0x66, 0x33, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x02, 0x66, 0x33, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x66, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x40, 0x0a, 0x16, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x61,
	0x7a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x13, 0x66, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2f, 0x0a, 0x11, 0x66, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f,
	0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x46, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x66, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x89, 0x02, 0x0a, 0x0a, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x42, 0x61, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x52, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x5f,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x9a,
	0x01, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x66, 0x5f, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x42, 0x61,
	0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x66,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x1a, 0x2a, 0x0a, 0x0d, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x22, 0x27, 0x0a, 0x0a, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x07, 0x0a, 0x03, 0x46, 0x6f, 0x6f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x61, 0x72,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x61, 0x7a, 0x10, 0x02, 0x22, 0x3f, 0x0a, 0x0f, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x0b, 0x62, 0x61, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0a, 0x62, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x0c,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a,
	0x2c, 0x0a, 0x07, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x49,
	0x52, 0x53, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x45, 0x43, 0x4f, 0x4e, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x02, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_reader_proto3_proto_rawDescOnce sync.Once
	file_test_reader_proto3_proto_rawDescData = file_test_reader_proto3_proto_rawDesc
)

func file_test_reader_proto3_proto_rawDescGZIP() []byte {
	file_test_reader_proto3_proto_rawDescOnce.Do(func() {
		file_test_reader_proto3_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_reader_proto3_proto_rawDescData)
	})
	return file_test_reader_proto3_proto_rawDescData
}

var file_test_reader_proto3_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_test_reader_proto3_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_test_reader_proto3_proto_goTypes = []any{
	(FooEnum)(0),                            // 0: FooEnum
	(BazMessage_Nested_NestedEnum)(0),       // 1: BazMessage.Nested.NestedEnum
	(*BarMessage)(nil),                      // 2: BarMessage
	(*FooMessage)(nil),                      // 3: FooMessage
	(*BazMessage)(nil),                      // 4: BazMessage
	(*RepeatedMessage)(nil),                 // 5: RepeatedMessage
	(*EmptyMessage)(nil),                    // 6: EmptyMessage
	(*EmptyMessageWithField)(nil),           // 7: EmptyMessageWithField
	nil,                                     // 8: FooMessage.FMapEntry
	(*BazMessage_Nested)(nil),               // 9: BazMessage.Nested
	(*BazMessage_Nested_NestedMessage)(nil), // 10: BazMessage.Nested.NestedMessage
}
var file_test_reader_proto3_proto_depIdxs = []int32{
	0,  // 0: FooMessage.f_FooEnum:type_name -> FooEnum
	2,  // 1: FooMessage.f_bar_message:type_name -> BarMessage
	4,  // 2: FooMessage.f_baz:type_name -> BazMessage
	9,  // 3: FooMessage.f_nested:type_name -> BazMessage.Nested
	1,  // 4: FooMessage.f_nested_enum:type_name -> BazMessage.Nested.NestedEnum
	8,  // 5: FooMessage.f_map:type_name -> FooMessage.FMapEntry
	4,  // 6: FooMessage.f_repeated_baz_message:type_name -> BazMessage
	9,  // 7: BazMessage.nested:type_name -> BazMessage.Nested
	2,  // 8: RepeatedMessage.bar_message:type_name -> BarMessage
	6,  // 9: EmptyMessageWithField.empty_message:type_name -> EmptyMessage
	10, // 10: BazMessage.Nested.f_nested:type_name -> BazMessage.Nested.NestedMessage
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_test_reader_proto3_proto_init() }
func file_test_reader_proto3_proto_init() {
	if File_test_reader_proto3_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_reader_proto3_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BarMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_reader_proto3_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FooMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_reader_proto3_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BazMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_reader_proto3_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_reader_proto3_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_reader_proto3_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyMessageWithField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_reader_proto3_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BazMessage_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_reader_proto3_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BazMessage_Nested_NestedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_test_reader_proto3_proto_msgTypes[1].OneofWrappers = []any{
		(*FooMessage_F1)(nil),
		(*FooMessage_F2)(nil),
		(*FooMessage_F3)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_reader_proto3_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_reader_proto3_proto_goTypes,
		DependencyIndexes: file_test_reader_proto3_proto_depIdxs,
		EnumInfos:         file_test_reader_proto3_proto_enumTypes,
		MessageInfos:      file_test_reader_proto3_proto_msgTypes,
	}.Build()
	File_test_reader_proto3_proto = out.File
	file_test_reader_proto3_proto_rawDesc = nil
	file_test_reader_proto3_proto_goTypes = nil
	file_test_reader_proto3_proto_depIdxs = nil
}
