syntax = "proto2";

option go_package = ".proto2";

enum FooEnumP2 {
    FIRST_VALUEX = 0;
    SECOND_VALUEX = 2;
}
    
message BarMessageP2 {
    required int32 b_int32 = 1;
}

message FooMessageP2 {
    required int32 f_int32 = 1;
    required int64 f_int64 = 2;
    optional uint32 f_uint32 = 3;
    optional uint64 f_uint64 = 4;
    optional sint32 f_sint32 = 5;
    optional sint64 f_sint64 = 6;
    optional bool f_bool = 7;
    optional FooEnumP2 f_FooEnum = 8;
    optional fixed64 f_fixed64 = 9;
    optional sfixed64 f_sfixed64 = 10;
    optional fixed32 f_fixed32 = 11;
    optional sfixed32 f_sfixed32 = 12;
    optional double f_double = 13;
    optional float f_float = 14;
    optional bytes f_bytes = 15;
    optional string f_string = 16;
    // optional FooMessage f_self_message = 17;
    optional BarMessageP2 f_bar_message = 18;
    repeated int32 f_repeated_int32 = 19;
    repeated int32 f_repeated_packed_int32 = 20 [packed = true];
    repeated float f_repeated_packed_float = 21 [packed = true];
    // optional a.b.ImportedMessage f_imported = 22;
    optional BazMessageP2 f_baz = 23;
    optional BazMessageP2.Nested f_nested = 24;
    optional BazMessageP2.Nested.NestedEnum f_nested_enum = 25 [default = Foo];
    repeated MapEntryP2 f_map = 27;
    optional int32 f1 = 28;
    optional bool f2 = 29;
    optional string f3 = 30;
    repeated string f_repeated_string = 31;
    repeated BazMessageP2 f_repeated_baz_message = 32;
    optional string f_optional_string = 33;

    // default value for fields
    optional int32 f_default_int32 = 34 [default = 42];
    optional string f_default_string = 35 [default = "default_value"];
    optional bool f_default_bool = 36 [default = true];
    optional double f_default_double = 37 [default = 3.14];
    optional FooEnumP2 f_default_enum = 38 [default = SECOND_VALUEX];
}

// Map entry message for proto2 compatibility
message MapEntryP2 {
    required string key = 1;
    required int32 value = 2;
}

message BazMessageP2 {
    message Nested {
        message NestedMessage {
            required int32 f_nested = 1;
        }
        enum NestedEnum {
            Foo = 0;
            Bar = 1;
            Baz = 2;
        }
        optional NestedMessage f_nested = 1;
    }
    optional Nested nested = 1;
    optional int64 b_int64 = 2;
    optional string b_string = 3;
}

message RepeatedMessageP2 {
    repeated BarMessageP2 bar_message = 1;
}
